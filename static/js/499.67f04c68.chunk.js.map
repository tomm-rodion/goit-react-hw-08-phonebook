{"version":3,"file":"static/js/499.67f04c68.chunk.js","mappings":"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","sources":["components/Style/mixins.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectorsContacts.js","components/ContactList/ContactList.jsx","components/ContactsFilter/CotactsFilter.styled.jsx","components/ContactsFilter/CotactsFilter.jsx","utils/initialValues.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","pages/Contacts.jsx","utils/validationSchema.js"],"sourcesContent":["export const font = ({ fs, fw, lh }) => `\n    font-size:${fs ? `${fs}px` : '16px'};\n    font-weight: ${fw ? `${fw}` : '500'};\n    line-height: ${`${lh}px`};\n\n`;\nexport const titleColor = () => `\n    color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  background-image: conic-gradient(\n    #553c9a 30%,\n    #ee4b2b 40%,\n    #ee4b2b 70%,\n    #00c2cb 80%,\n    #553c9a\n  );\n`;\n\nexport const btn = () => `\n   background: #a99d9c;\n  border: 1px solid #a99d9c;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.2) 1px 2px 4px;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: inline-block;\n  font-family: nunito, roboto, proxima-nova, 'proxima nova', sans-serif;\n  \n  outline: 0;\n  padding: 12px 14px;\n  text-align: center;\n  text-rendering: geometricprecision;\n  text-transform: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n\n  &:hover,\n  &:active {\n    background-color: initial;\n    background-position: 0 0;\n    color: #ff4742;\n  }\n\n  &:active {\n    opacity: 0.5;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { btn, font } from 'components/Style/mixins';\n\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const ItemSpan = styled.span`\n  padding-right: 8px;\n`;\n\nexport const ButtonDeleteContact = styled.button`\n  ${font({ fs: 14, fw: 400, lh: 18 })};\n  ${btn};\n  padding: 5px 10px;\n  margin: 10px 0px;\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  ItemContact,\n  ButtonDeleteContact,\n  ItemSpan,\n} from './ContactItem.styled';\nimport { deleteContactsById } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <ItemContact>\n      <ItemSpan>\n        {name} : {number}\n      </ItemSpan>\n      <ButtonDeleteContact\n        type=\"button\"\n        onClick={() => dispatch(deleteContactsById(id))}\n      >\n        Delete contact\n      </ButtonDeleteContact>\n    </ItemContact>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectISLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacrtList = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n    );\n  }\n);\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacrtList } from 'redux/contacts/selectorsContacts';\n\nexport const ContactList = () => {\n  const contactsList = useSelector(selectContacrtList);\n\n  return (\n    <ul>\n      {contactsList.map(({ name, number, id }) => (\n        <ContactItem key={id} name={name} id={id} number={number} />\n      ))}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\nimport { font } from 'components/Style/mixins';\n\nexport const LabelSearchContact = styled.label`\n  display: block;\n  color: #f51616;\n  ${font};\n  margin-right: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  border: 0;\n  outline: 1px solid #08215a;\n  border-radius: 3px;\n  height: 20px;\n  ${font};\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, LabelSearchContact } from './CotactsFilter.styled';\nimport { selectFilter } from 'redux/contacts/selectorsContacts';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const searchQuery = e.target.value;\n    return dispatch(setFilter(searchQuery));\n  };\n  return (\n    <>\n      <LabelSearchContact htmlFor=\"filter\">\n        Search contact by name\n      </LabelSearchContact>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Name\"\n        autoComplete=\"off\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n","const initialValues = { name: '', number: '' };\n\nexport default initialValues;\n","import styled from '@emotion/styled';\nimport { btn } from 'components/Style/mixins';\nimport { Form, Field } from 'formik';\n\nexport const FormAddContact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const InputField = styled(Field)`\n  border: 0;\n  outline: 1px solid #08215a;\n  border-radius: 3px;\n  min-width: 130px;\n  height: 20px;\n  margin: 8px;\n  &:last-child {\n    padding-left: 5px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: #f51616;\n`;\n\nexport const ButtonAddContact = styled.button`\n  ${btn}\n  padding: 10px 25px;\n  margin-top: 20px;\n  margin-bottom: 15px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { selectContacts } from 'redux/contacts/selectorsContacts';\nimport initialValues from 'utils/initialValues';\n\nimport {\n  FormAddContact,\n  InputField,\n  Label,\n  ButtonAddContact,\n} from './ContactsForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport { number } from 'yup';\nimport { schema } from 'utils/validationSchema';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onformSubmit = value => {\n    const nameInContacts = () =>\n      contacts.find(\n        ({ name }) => name.toLowerCase() === value.name.toLowerCase()\n      );\n    const renameContact = newName =>\n      contacts.find(({ name }) => name.toLowerCase() === newName.toLowerCase());\n    if (nameInContacts()) {\n      Notiflix.Notify.warning(`${value.name} is already in contacts.`, {\n        timeout: 5000,\n      });\n      Notiflix.Confirm.prompt(\n        'Rename a contact',\n        'Rename the contact you want to create!',\n        '',\n        'Answer',\n        'Cancel',\n        function okCb(newName) {\n          const result = renameContact(newName);\n          if (!result) {\n            dispatch(addContacts({ name: newName, number }));\n          } else {\n            Notiflix.Notify.warning(\n              `What you do? Name : ${newName} already exists !!!. `,\n              {\n                timeout: 5000,\n              }\n            );\n          }\n        }\n      );\n      return;\n    }\n    dispatch(addContacts(value));\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    onformSubmit(value);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <FormAddContact>\n          <Label htmlFor=\"name\">\n            Name\n            {touched.name && errors.name && <div>{errors.name}</div>}\n            <InputField type=\"text\" name=\"name\" placeholder=\"First Name\" />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            {touched.number && errors.number && <div>{errors.number}</div>}\n            <InputField type=\"text\" name=\"number\" placeholder=\"Number tel:\" />\n          </Label>\n          <ButtonAddContact type=\"submit\">Add contact</ButtonAddContact>\n        </FormAddContact>\n      )}\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { DotLoader } from 'react-spinners';\nimport { Helmet } from 'react-helmet';\nimport { ContactsFilter } from 'components/ContactsFilter/CotactsFilter';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport {\n  selectContacts,\n  selectError,\n  selectISLoading,\n} from 'redux/contacts/selectorsContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectISLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {error && <p>Something went wrong, please reload the page :(</p>}\n      {!error && <p>Add contacts here</p>}\n      {!error && <ContactsForm />}\n      {!error && <p>Contacts</p>}\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      {isLoading && !error && (\n        <DotLoader\n          color=\"#2dcf2d\"\n          cssOverride={{\n            display: 'block',\n            margin: '0 auto',\n          }}\n        />\n      )}\n      {contacts.length !== 0 && <ContactsFilter />}\n      {contacts.length !== 0 && <ContactList />}\n      {contacts.length === 0 && !error && (\n        <p>Your contact list is empty yet...</p>\n      )}\n    </div>\n  );\n}\n","import * as yup from 'yup';\n\nexport const validationRegistrateSchema = yup.object().shape({\n  name: yup\n    .string('Name may contain only letters, apostrophe, dash and spaces.')\n    .required('This field is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('This field is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('This field is required'),\n});\n\nexport const validationLogInSchema = yup.object().shape({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('This field is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('This field is required'),\n});\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport const schema = yup.object().shape({\n  name: yup.string().min(2, 'Too Short!').max(15, 'Too Long!').required(),\n  number: yup\n    .string()\n    .min(2, <em>Too Short!</em>)\n    .max(15, <em>Too Long!</em>)\n    .matches(phoneRegExp, <em>Phone number is not valid</em>)\n    .required(),\n});\n"],"names":["font","fs","fw","lh","btn","ItemContact","styled","ItemSpan","ButtonDeleteContact","ContactItem","id","name","number","dispatch","useDispatch","type","onClick","deleteContactsById","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectISLoading","isLoading","selectError","error","selectContacrtList","contact","toLowerCase","includes","trim","ContactList","contactsList","useSelector","LabelSearchContact","FilterInput","ContactsFilter","htmlFor","placeholder","autoComplete","onChange","e","searchQuery","target","setFilter","FormAddContact","Form","InputField","Field","Label","ButtonAddContact","ContactsForm","onformSubmit","Notiflix","timeout","newName","result","renameContact","addContacts","initialValues","validationSchema","schema","onSubmit","resetForm","errors","touched","Contacts","useEffect","fetchContacts","Helmet","DotLoader","color","cssOverride","display","margin","validationRegistrateSchema","yup","shape","required","email","password","min","max","matches"],"sourceRoot":""}